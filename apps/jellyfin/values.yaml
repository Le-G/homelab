app-template:
  defaultPodOptions:
    securityContext:
      fsGroup: 1000
  controllers:
    main:
      enabled: false
    jellyfin:
      containers:
        main:
          env:
            PUID: 1000
            PGID: 1000
          image:
            repository: docker.io/jellyfin/jellyfin
            tag: 10.10.7
    transmission:
      containers:
        main:
          env:
            PUID: 0
            PGID: 0
            WHITELIST: "*"
            HOST_WHITELIST: "transmission.le-g.dev"
          image:
            repository: lscr.io/linuxserver/transmission
            tag: 4.0.6
    prowlarr:
      initContainers:
        ygg-definitions:
          image:
            repository: docker.io/curlimages/curl
            tag: 8.11.0
          command:
            - /bin/sh
            - -c
            - |
              echo "Downloading YGG indexer definitions..."
              mkdir -p /shared/custom-definitions
              
              # Download yggtorrent.yml
              curl -fsSL "https://raw.githubusercontent.com/Prowlarr/Indexers/17e54db771ee41658a26fe96e5529574724f633f/definitions/v11/yggtorrent.yml" \
                -o /shared/custom-definitions/yggtorrent.yml
              
              # Download yggcookie.yml  
              curl -fsSL "https://raw.githubusercontent.com/Prowlarr/Indexers/17e54db771ee41658a26fe96e5529574724f633f/definitions/v11/yggcookie.yml" \
                -o /shared/custom-definitions/yggcookie.yml
              
              echo "YGG definitions downloaded successfully!"
              ls -la /shared/custom-definitions/
      containers:
        main:
          env:
            PUID: 0
            PGID: 0
          image:
            repository: lscr.io/linuxserver/prowlarr
            tag: 2.0.5
    radarr:
      containers:
        main:
          env:
            PUID: 0
            PGID: 0
          image:
            repository: lscr.io/linuxserver/radarr
            tag: 5.26.2
    sonarr:
      containers:
        main:
          env:
            PUID: 0
            PGID: 0
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.15
    jellyseerr:
      containers:
        main:
          env:
            PUID: 0
            PGID: 0
          image:
            repository: docker.io/fallenbagel/jellyseerr
            tag: 1.7.0
    flaresolverr:
      containers:
        main:
          image:
            repository: ghcr.io/flaresolverr/flaresolverr
            tag: v3.3.21
    plex:
      containers:
        main:
          env:
            PUID: 0
            PGID: 0
          image:
            repository: lscr.io/linuxserver/plex
            tag: 1.41.0
  service:
    main:
      enabled: false
    jellyfin:
      controller: jellyfin
      ports:
        http:
          port: 8096
          protocol: HTTP
    transmission:
      controller: transmission
      ports:
        http:
          port: 9091
          protocol: HTTP
        torrent:
          port: 51413
          protocol: TCP
    prowlarr:
      controller: prowlarr
      ports:
        http:
          port: 9696
          protocol: HTTP
    radarr:
      controller: radarr
      ports:
        http:
          port: 7878
          protocol: HTTP
    sonarr:
      controller: sonarr
      ports:
        http:
          port: 8989
          protocol: HTTP
    jellyseerr:
      controller: jellyseerr
      ports:
        http:
          port: 5055
          protocol: HTTP
    flaresolverr:
      controller: flaresolverr
      ports:
        http:
          port: 8191
          protocol: HTTP
    plex:
      controller: plex
      ports:
        http:
          port: 32400
          protocol: TCP
        dlna-udp:
          port: 1900
          protocol: UDP
        discovery:
          port: 5353
          protocol: UDP
        companion:
          port: 8324
          protocol: TCP
        gdm1:
          port: 32410
          protocol: UDP
        gdm2:
          port: 32412
          protocol: UDP
        gdm3:
          port: 32413
          protocol: UDP
        gdm4:
          port: 32414
          protocol: UDP
        dlna:
          port: 32469
          protocol: TCP
  ingress:
    media-stack:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &jellyfinHost jellyfin.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: jellyfin
                port: http
        - host: &transmissionHost transmission.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: transmission
                port: http
        - host: &prowlarrHost prowlarr.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: prowlarr
                port: http
        - host: &radarrHost radarr.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: radarr
                port: http
        - host: &sonarrHost sonarr.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: sonarr
                port: http
        - host: &jellyseerrHost jellyseerr.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: jellyseerr
                port: http
        - host: &flaresolverrHost flaresolverr.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: flaresolverr
                port: http
        - host: &plexHost plex.le-g.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: plex
                port: http
      tls:
        - secretName: jellyfin-tls-certificate
          hosts:
            - *jellyfinHost
            - *transmissionHost
            - *prowlarrHost
            - *radarrHost
            - *sonarrHost
            - *jellyseerrHost
            - *plexHost
            - *flaresolverrHost
  persistence:
    data:
      accessMode: ReadWriteOnce
      size: 200Gi
      advancedMounts:
        jellyfin:
          main:
            - path: /config
              subPath: jellyfin/config
            - path: /media/movies
              subPath: movies
            - path: /media/shows
              subPath: shows
        transmission:
          main:
            - path: /config
              subPath: transmission/config
            - path: /downloads
              subPath: transmission/downloads
        prowlarr:
          main:
            - path: /config
              subPath: prowlarr/config
        radarr:
          main:
            - path: /config
              subPath: radarr/config
            - path: /downloads/complete
              subPath: transmission/downloads/complete
            - path: /movies
              subPath: movies
        sonarr:
          main:
            - path: /config
              subPath: sonarr/config
            - path: /downloads/complete
              subPath: transmission/downloads/complete
            - path: /shows
              subPath: shows
        jellyseerr:
          main:
            - path: /app/config
              subPath: jellyseerr/config
        plex:
          main:
            - path: /config
              subPath: plex/config
            - path: /media/movies
              subPath: movies
            - path: /media/shows
              subPath: shows
    nas:
      enabled: true
      type: nfs
      server: 192.168.1.181
      path: /mnt/main/medias
    shared-definitions:
      enabled: true
      type: emptyDir
      advancedMounts:
        prowlarr:
          ygg-definitions:
            - path: /shared
          main:
            - path: /config/Definitions/Custom
              subPath: custom-definitions
