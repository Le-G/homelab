immich:
  # Define hostname anchor at the top
  shared_config:
    hostname: &hostname immich.le-g.dev
    url: &url https://immich.le-g.dev

  env:
    DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
    DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
    DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
    # Database password is now provided via external secret
    DB_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: immich-postgresql-secret
          key: postgres-password
    IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
  immich:
    metrics:
      # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
      enabled: false
    persistence:
      # Main data store for all phAotos shared between different components.
      library:
        # Automatically creating the library volume is not supported by this chart
        # You have to specify an existing PVC to use
        existingClaim: immich-nas-pvc
    # configuration is immich-config.json converted to yaml
    # ref: https://immich.app/docs/install/config-file/

  server:
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          external-dns.alpha.kubernetes.io/target: homelab-tunnel.le-g.dev
          external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts:
          - host: *hostname
            paths:
              - path: "/"
        tls:
          - secretName: immich-ingress-tls
            hosts:
              - *hostname
postgresql:
  global:
    postgresql:
      auth:
        username: immich
        database: immich
        existingSecret: immich-postgresql-secret
        secretKeys:
          adminPasswordKey: postgres-password
          userPasswordKey: postgres-password
    security:
      allowInsecureImages: true
  image:
    registry: ghcr.io
    repository: le-g/homelab/pg
    tag: latest
  initdbScripts:
    enable-vector.sql: |
      CREATE EXTENSION IF NOT EXISTS vector;

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false



